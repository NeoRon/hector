<?php

/**
 * HECTOR - class.Malware_service.php
 *
 * @author Josh Bauer <bauerj@mlhs.org>
 *
 * @package HECTOR
 */

error_reporting(E_ALL);

if (0 > version_compare(PHP_VERSION, '5')) {
	die('This file was generated for PHP 5');
}

/* user defined includes */
require_once('class.Config.php');
require_once('class.Db.php');
require_once('class.Log.php');
require_once('class.Domain.php');

class Malware_service {
	
	// --- ATTRIBUTES ---
	
	/**
	 * Unique id reflected from the database
	 *
	 * @access private
	 * @var int
	 */
	protected $id = null;
	
	/**
	 * Malware Service name.
	 *
	 * @var String
	 */
	private $name;
	
	/**
	 * Malware Service url
	 *
	 * @var String
	 */
	private $url;
	
	/**
	 * Malware Service api key
	 *
	 * @var String
	 */
	private $api_key;
	
	/**
	 * Generic constructor.  Look up the object
	 * from the database or instantiate a blank
	 * one.
	 *
	 * @access public
	 * @param  int id
	 * @return void
	 */
	public function __construct($id = '')
	{
		$this->db = Db::get_instance();
		$this->log = Log::get_instance();
		if ($id != '') {
			$sql = array(
					'SELECT * FROM malware_service WHERE malware_service_id = ?i',
					$id
			);
			$result = $this->db->fetch_object_array($sql);
			if (isset($result[0])) {
				$this->id = $result[0]->malware_service_id;
				$this->name = $result[0]->malware_service_name;
				$this->url = $result[0]->malware_service_url;
				$this->api_key = $result[0]->malware_service_api_key;
			}
		}
	}
	
	/**
	 * Delete the record from the database
	 *
	 * @access public
	 * @return Boolean True if the delete succeeds, False otherwise.
	 */
	public function delete() {
		$retval = FALSE;
		if ($this->id > 0 ) {
			$sql=array('Delete FROM malware_service WHERE malware_service_id =?i',
					$this->get_id()
			);
			$retval = $this->db->iud_sql($sql);
		}
		$this->set_id(null);
		return $retval;
	}
	
	/**
	 * Return the unique id from the data layer
	 *
	 * @access public
	 * @return int Unique id from the data layer or zero
	 */
	public function get_id() {
		return intval($this->id);
	}
	
	/**
	 * Return the display safe name
	 *
	 * @access public
	 * @return String The malware service name
	 */
	public function get_name() {
		return htmlspecialchars($this->name);
	}
	
	/**
	 * Return the display safe url
	 *
	 * @access public
	 * @return String The url
	 */
	public function get_url() {
		return htmlspecialchars($this->url);
	}
	
	/**
	 * Return the display safe api_key
	 *
	 * @access public
	 * @return String The api key
	 */
	public function get_api_key() {
		return htmlspecialchars($this->api_key);
	}
	
	/**
	 * Persist the object back to the data layer.
	 *
	 * @access public
	 * @return bool True if the save worked properly, false otherwise.
	 */
	public function save() {
		$sql = '';
		if ($this->id > 0 ) {
			// Update an existing malware service
			$sql = array(
					'UPDATE malware_service SET ' .
					'malware_service_name = \'?s\', ' .
					'malware_service_url = \'?s\', ' .
					'malware_service_api_key = \'?s\' ' .
					'WHERE malware_service_id = \'?i\'',
					$this->get_name(),
					$this->get_url(),
					$this->get_api_key(),
					$this->get_id()
			);
			$retval = $this->db->iud_sql($sql);
		}
		else {
			$sql = array(
					'INSERT INTO malware_service ' .
					'SET malware_service_name = \'?s\', '.
					'malware_service_url = \'?s\', ' .
					'malware_service_api_key = \'?s\'',
					$this->get_name(),
					$this->get_url(),
					$this->get_api_key()
			);
			$retval = $this->db->iud_sql($sql);
			// Now set the id
			$sql = 'SELECT LAST_INSERT_ID() AS last_id';
			$result = $this->db->fetch_object_array($sql);
			if (isset($result[0]) && $result[0]->last_id > 0) {
				$this->id = $result[0]->last_id;
			}
		}
	
		return $retval;
	}
	
	/**
	 * Populate object if a malware service name exists in the database
	 * @param $name String
	 * @access public
	 * @return bool
	 */
	public function lookup_by_name($name) {
		$sql = array('select * from malware_service where malware_service_name = \'?s\'', $name);
		$result = $this->db->fetch_object_array($sql);
		if (isset($result[0])) {
			$this->id = $result[0]->malware_service_id;
			$this->name = $result[0]->malware_service_name;
			$this->url = $result[0]->malware_service_url;
			$this->api_key = $result[0]->malware_service_api_key;
			return true;
		}
		return false;
	}
	
	/**
	 * Set the object's unique id
	 *
	 * @access protected
	 * @param  int The unique id for the object
	 * @return bool
	 */
	protected function set_id($id) {
		$this->id = (int) $id;
		return true;
	}
	
	/**
	 * Set the malware service name
	 *
	 * @access public
	 * @param  $name String
	 * @return bool
	 */
	public function set_name($name) {
		if ($name != '') {
			$this->name = htmlspecialchars($name);
			return true;
		}
		return false;
	}
	
	/**
	 * Set the malware service url
	 *
	 * @access public
	 * @param  $url String
	 * @return bool
	 */
	public function set_url($url) {
		if ($url != '') {
			$this->url = htmlspecialchars($url);
			return true;
		}
		return false;
	}
	
	/**
	 * Set the malware service api key
	 *
	 * @access public
	 * @param  $api_key String
	 * @return bool
	 */
	public function set_api_key($api_key) {
		if ($api_key != '') {
			$this->api_key = htmlspecialchars($api_key);
			return true;
		}
		return false;
	}
	
}
?>