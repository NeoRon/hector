<?php 

require_once(dirname(__FILE__) . '/../software/simpletest/autorun.php');
require_once(dirname(__FILE__) . '/../lib/class.Malware_domain.php');


class TestOfMalware_domainClass extends UnitTestCase {
	
  private $malware_domain;
  
  private $malware_domain_id;
  
  function setUp() {
  	$this->malware_domain = new Malware_domain();
  }
  
  function tearDown() {
  	$this->malware_domain->delete();
  }
  
  function testMalware_domainConstructor() {
  	$this->assertIsA($this->malware_domain, 'Malware_domain');
  }
  
  function testMalware_domainSave() {
  	$this->assertEqual($this->malware_domain->get_id(), 0);
  	$this->malware_domain->set_name('test.domain.com');
  	$this->assertTrue($this->malware_domain->save());
  	$this->malware_domain_id = $this->malware_domain->get_id();
  	$this->assertTrue($this->malware_domain_id > 0);
  }
  
  
  function testMalware_domainSet_name() {
  	$testval = 'Test.domain.name';
  	$this->malware_domain->set_name($testval);
  	$this->assertEqual($this->malware_domain->get_name(), $testval);
  }

  function testMalware_domainDelete() {
  	$this->assertEqual($this->malware_domain->get_id(), 0);
  	$this->malware_domain->set_name('test.domain.com');
  	$this->assertTrue($this->malware_domain->save());
  	$this->malware_domain_id = $this->malware_domain->get_id();
  	$this->assertTrue($this->malware_domain_id > 0);
  	$this->malware_domain->delete();
  	$this->assertEqual($this->malware_domain->get_id(), 0);
  }
  
  function testMalware_domainLookup_by_name() {
  	$testval = 'Test.domain.name';
  	$testval2 = 'Test.domain.name.2';
  	$this->malware_domain->set_name($testval);
  	$this->malware_domain->save();
  	$testobj = new Malware_domain();
  	$testobj->lookup_by_name($testval);
  	$testobj2 = new Malware_domain();
  	$testobj2->lookup_by_name($testval2);
  	$this->assertEqual($this->malware_domain->get_id(), $testobj->get_id());
  	$this->assertNotEqual($this->malware_domain->get_id(), $testobj2->get_id());
  }
}
?>