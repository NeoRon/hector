INSTALLATION
------------

HECTOR
by Justin C. Klein Keane <jukeane@sas.upenn.edu>
Last modified: 19 September 2012

PREREQUISITES
-------------
HECTOR requires a number of services in order to function minimally.  These
include a web server capable of executing PHP and a MySQL server.  These
are complex and dynamic technologies so should be installed using your 
distributions package management system (such as RPM, Yum, or APT).  This
document will describe installation on a CentOS 6 system.

PACKAGE CONTENTS
----------------

There are two directories for the application: app and html.  The app directory
is designed to be placed outside of your web server's web root (so that it 
isn't exposed via the web service).  The html directory is supposed to be 
placed in the web root. 

A good way to install HECTOR is to create a new directory /opt/hector and put
both the html and app directories there.  Next, update your web server's
DocumentRoot to /opt/hector/html. 

The core of HECTOR's operational configuration is located in the app/conf
directory.  You sould find a file config.ini.blank file which serves as a 
template.  Edit this file to refelct values appropriate for your environment
then rename it to config.ini to ensure that HECTOR can find it.

SUPPORTING SOFTWARE
-------------------
 
There are a number of additional supporting software packages included in the 
HECTOR distribution that support the installation.  OSSEC, an open source
host based intrusion detection system (http://www.ossec.net) is one of the 
components and can be found in the app/software directory.  Simply unpack
the installation using:

# tar xvzf ossec-hids-2.3.tar.gz

To unpack the installation.  Once unpacked simply install OSSEC using the 
installation script (install.sh) included in the OSSEC directory.  Using the
defaults for installation is expected.  For instance, the HECTOR scripts that
import OSSEC data look for logs in the /var/ossec/logs directory, so if
your installation varies you may need to change other scripts in HECTOR.  You
should enable e-mail alerts if you wish to use OSSEC to track ongoing attacks
as HECTOR does not import alerts as they occur, but rather on a nightly basis.

OSSEC should be installed in server mode on the same host, or should at least
make logs accessible to the host.  There is a Perl script, designed to be run
daily, that scans the OSSEC logs and imports them into HECTOR's database.  This
script is located at app/scripts/ossec_logreader.pl.  This script should be
scheduled (via cron) to be run nightly (see SCHEDULED JOBS section below).  
Note that if you enable remote logging (in order to set up OSSEC clients on 
other machines) you will need to adjust your firewall rules to allow access to
UDP port 514 by the clients.  Be sure to start OSSEC once the install is
completed.

HECTOR also relies on darknet data collected via rsyslog and sensors running
iptables as described in http://www.madirish.net/537.  The SQL install script
(see DATABASE SUPPORT section) will create a trigger on the default MySQL table
used by rsyslog when MySQL support is enabled that will move data from that 
table into a table in the HECTOR database for easier reporting.

Rsyslog and MySQL support should be installed and configured using your hosts
native package managment (such as RPM, Yum, or APT) since this is fairly 
dynamic software and will need to be updated somewhat regularly.  If you 
install on a remote host just be sure that you're sending logs to rsyslog 
on the HECTOR host so the MySQL trigger functions properly.

On RHEL or CentOS systems you can use the Yum package manager to install and
enable rsyslog and MySQL.  Simply use:

# yum install rsyslog-mysql

Next you must create the correct tables in MySQL for rsyslog.  To do this you
must import the createDB.sql file from the rsyslog package.  On a CentOS 6 host
this can be done using:

$ mysql -u root -p < /usr/share/doc/rsyslog-mysql-5.8.10/createDB.sql

(note the version number may differ from the above 5.8.10).  This script will
create a new database called 'Syslog' with a table called 'SystemEvents' that 
will be used by HECTOR as described below.  Additionally you'll need to add
the following line to your /etc/rsyslog.conf file to enable this support:

$ModLoad ommysql

And finally you need to add the following line under the definition for log
entries that go to /var/log/messages:

if $msg contains 'iptables ' then :ommysql:[host],Syslog,[uname],[password]

Where [host], [uname], and [password] are replaced with appropriate values for
your installation.  For example:

# Log anything (except mail) of level info or higher.
# Don't log private authentication messages!
*.info;mail.none;authpriv.none;cron.none                /var/log/messages
if $msg contains 'iptables ' then :ommysql:localhost,Syslog,root,rootPassword

Once installed and configured you will need to adjust iptables in order to log
firewall drops to syslog.  This process is pretty much the same for darknet 
sensors on other hosts, except you will have to update your rsyslog config-
uration file (/etc/rsyslog.conf) on those hosts to point to the HECTOR host.  
The important part of the iptables alteration is the final line that will LOG
dropped packets.  Below is an example iptables configuration file (which can 
be found in /etc/sysconfig/iptables on a CentOS host):

 Firewall configuration written by system-config-firewall
# Manual customization of this file is not recommended.
*filter
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT
-A INPUT -p icmp -j ACCEPT
-A INPUT -i lo -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 22 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 2222 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 993 -j ACCEPT
-A INPUT -m state --state NEW -m tcp -p tcp --dport 80 -j ACCEPT
-A INPUT -m state --state NEW -m udp -p udp --dport 514 -j ACCEPT
-A INPUT -d 224.0.0.251 -j REJECT -m comment --comment "Ignore multicast packets"
-A INPUT -d 224.0.0.1 -j REJECT -m comment --comment "Ignore multicast packets"
-A INPUT -d 10.0.0.2 -m state --state NEW -j LOG --log-ip-options --log-prefix "iptables " -m comment --comment "Log dropped packets"
-A INPUT -j REJECT --reject-with icmp-host-prohibited
-A FORWARD -j REJECT --reject-with icmp-host-prohibited
COMMIT

Once done you can restart iptables and rsyslog and then test the configuration
by attempting to telnet to the HECTOR host from another machine.  The connect
attempt should fail and you can check to ensure database logging is working 
using:

$ mysql -u root Syslog
mysql> select ID, ReceivedAt, Message from SystemEvents;

You should see an entry for a dropped packed to destination port 23.  If not 
then check your system logs for indications of what might have gone wrong.

NMAP should also be installed on your HECTOR host, but you can use your
operating system package management to do this installation.  Optionally you
can download the latest version of NMAP from http://nmap.org and perform the
installation manually.

Note that this configuration allows TCP ports 22, 2222, 993 and 80, as well as
UDP port 514, so the darknet sensor won't detect packets sent to those ports.
Once iptables and rsyslog are configured they may need to be restarted using:

# service rsyslog restart
# service iptables restart


Finally, HECTOR utilizes data collected from a heavily modified Kojoney SSH
honeypot (http://kojoney.sourceforge.net/).  You can install Kojoney on
almost any host you want, including the HECTOR host, as long as you change 
the port normally used for SSH to avoid conflicts.

DATABASE SUPPORT
----------------

The next step to installation is to create a database for HECTOR.  In this 
document we will use the database name 'hector' but it is somewhat arbitrary.

Create the database using the MySQL command line interface:

mysql> create database hector;
mysql> grant all privileges on hector.* to 'hector_user'@localhost 
  identified by 'hector_pass';

Next populate the database using the installation script:

$ mysql -u root -p < sql/db.sql

Where "sql/db.sql" is a subdirectory under app (for instance, found in the 
/opt/hector/app/sql/db.sql full file path).

SCHEDULED JOBS
--------------

To run scheduled scans you must also create a scheduled (cron) job for the 
script at scripts/scan_cron.php.  This script is designed to be run using the 
PHP command line interface (CLI) and can be set with something like:

01 0 * * * /usr/bin/php /opt/hector/app/scripts/scan_cron.php

The script examines database settings and hands off to the various other PHP 
scripts that actually run scans.  Be aware that the nmap_scan.php script writes
an XML file of output, so be wary of what user account runs this script so 
that the scan result XML file is protected.

As mentioned before, in order for OSSEC integration to work properly you must
schedule an import job to occur each night.  The script included will import
all of the log messages from the previous day, so be aware that OSSEC reporting
in HECTOR will not be up to the moment and is designed to gain historical 
insights rather than track attacks as they occur.  To schedule the import add
the following line to your cron

01 0 * * * /opt/hector/app/scripts/ossec_logreader.pl

USING HECTOR
------------

You can log into the web interface through your web browser, for instance at:
https://192.168.0.1/

The installation script creates an 'administrator' account with the password 
'password'.  Note that you can create other accounts by following the template
in sql/db.sql.  HECTOR is configured to utilize CoSign authentication if avail-
able, so all you need to do is create accounts, and fill in bogus passwords,
for CoSign authenticated accounts.